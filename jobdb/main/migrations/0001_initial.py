# Generated by Django 5.0.6 on 2024-06-21 20:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields  # type: ignore
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=500,
                        unique=True,
                        verbose_name="Company name",
                    ),
                ),
                (
                    "hq",
                    models.CharField(
                        help_text="Company headquarters location",
                        max_length=250,
                        verbose_name="Headquarters",
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        help_text="Company web site URL",
                        max_length=2048,
                        unique=True,
                        verbose_name="URL",
                    ),
                ),
                (
                    "careers_url",
                    models.URLField(
                        help_text="Careers page URL",
                        max_length=2048,
                        unique=True,
                        verbose_name="Careers URL",
                    ),
                ),
                (
                    "employees_est",
                    models.CharField(
                        max_length=100,
                        verbose_name="Estimated number of employees",
                    ),
                ),
                (
                    "employees_est_source",
                    models.CharField(
                        max_length=500,
                        verbose_name="Estimated number of employees source",
                    ),
                ),
                (
                    "how_found",
                    models.CharField(
                        blank=True,
                        help_text="How the company was originally found",
                        max_length=250,
                        verbose_name="How Found",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
            ],
            options={
                "verbose_name_plural": "Companies",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text=(
                            "Designates that this user has all"
                            " permissions without explicitly assigning them."
                        ),
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": (
                                "A user with that username already exists."
                            )
                        },
                        help_text=(
                            "Required. 150 characters or fewer."
                            " Letters, digits and @/./+/-/_ only."
                        ),
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()  # noqa
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        verbose_name="email address",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text=(
                            "Designates whether the user can"
                            " log into this admin site."
                        ),
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text=(
                            "Designates whether this user should be"
                            " treated as active. Unselect this"
                            " instead of deleting accounts."
                        ),
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text=(
                            "The groups this user belongs to."
                            " A user will get all permissions"
                            " granted to each of their groups."
                        ),
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Posting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        help_text="Job posting URL",
                        max_length=2048,
                        unique=True,
                        verbose_name="Posting URL",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=500, verbose_name="Role Title"
                    ),
                ),
                (
                    "closed",
                    models.DateTimeField(
                        null=True, blank=True, verbose_name="Date Closed"
                    ),
                ),
                (
                    "closed_note",
                    models.CharField(
                        blank=True,
                        help_text="Optional reason role is closed",
                        max_length=1000,
                        verbose_name="Closed Note",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        max_length=500, verbose_name="Role Location"
                    ),
                ),
                (
                    "wa_jurisdiction",
                    models.CharField(
                        blank=True,
                        help_text="WA jurisdiction if role is remote",
                        max_length=2000,
                        verbose_name="WA Jurisdiction",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, verbose_name="Notes and evidence"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.company",
                    ),
                ),
            ],
            options={
                "verbose_name": "Job posting",
            },
        ),
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bona_fide",
                    models.IntegerField(
                        null=True,
                        blank=True,
                        choices=[
                            (1, "High"),
                            (2, "Medium"),
                            (3, "Low"),
                            (4, "License or certification needed"),
                        ],
                        verbose_name="Bona Fide rating",
                    ),
                ),
                ("applied", models.DateTimeField(verbose_name="Date Applied")),
                (
                    "reported",
                    models.DateTimeField(
                        null=True, blank=True, verbose_name="Date Reported"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "posting",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.posting",
                    ),
                ),
            ],
            options={
                "verbose_name": "Job application",
            },
        ),
    ]
