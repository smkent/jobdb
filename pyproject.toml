[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[project]
name = "jobdb"
description = "Jobs database"
license = "GPL-3.0-or-later"
authors = [ { name = "Stephen Kent", email = "smkent@smkent.net" } ]
readme = "README.md"
repository = "https://github.com/smkent/jobdb"
classifiers = [
    "Development Status :: 1 - Planning",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
requires-python = ">=3.10,<4.0"
dynamic = [ "version" ]
dependencies = [
    "crispy-bootstrap5 (>=2024.2)",
    "django (>=5.0.6)",
    "django-bootstrap5 (>=24.2)",
    "django-crispy-forms (>=2.2)",
    "django-extensions (>=3.2.3)",
    "django-filter (>=24.2)",
    "django-htmx (>=1.18.0)",
    "django-import-export[all] (>=4.1.0)",
    "django-stubs[compatible-mypy] (>=5.0.2)",
    "django-tables2 (>=2.7.0)",
    "djangorestframework (>=3.15.2)",
    "djangorestframework-stubs[compatible-mypy] (>=3.15.0)",
    "drf-link-header-pagination (>=0.2.0)",
    "drf-problems (>=1.0.5)",
    "drf-spectacular (>=0.27.2)",
    "gunicorn (>=22.0.0)",
    "psycopg2-binary (>=2.9.9)",
    "tablib[all] (>=3.5.0)",
    "whitenoise (>=6.7.0)",
]

[project.scripts]

[tool.poetry]
requires-poetry = ">=2.0"
version = "0.0.0"

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version = ">=1.0.0,<2.0.0", extras = ["plugin"] }

[tool.poetry.group.dev.dependencies]
bandit = {extras = ["toml"], version = "*"}
black = "*"
cruft = "*"
flake8 = "*"
flake8-bugbear = "*"
flake8-pyproject = "*"
flake8-simplify = "*"
isort = "*"
mypy = "*"
pep8-naming = "*"
poethepoet = "*"
pre-commit = "*"
pytest = "*"
pytest-cov = "*"
pytest-django = "^4.8.0"
pytest-github-actions-annotate-failures = "*"
pytest-sugar = "*"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[tool.poe.tasks.lint]
cmd = "pre-commit run --all-files --show-diff-on-failure"
help = "Check all files"

[tool.poe.tasks.pytest]
cmd = "pytest"
help = "Run unit tests with pytest"

[tool.poe.tasks.test]
sequence = ["lint", "pytest"]
help = "Run all tests"

[tool.bandit]
skips = ["B101", "B404"]  # assert_used, subprocess module

[tool.black]
line-length = 79

[tool.coverage.run]
source = ["jobdb"]

[tool.coverage.report]
fail_under = 0
show_missing = true

[tool.cruft]
skip = [".git"]

[tool.flake8]
exclude = "./.*"

[tool.isort]
atomic = true
profile = "black"
line_length = 79

[tool.mypy]
files = [ "tests", "jobdb" ]
mypy_path = "types"
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = """\
    --cov \
    --cov-append \
    --cov-report term \
    --cov-report xml:.pytest_coverage.xml \
    --junitxml=.pytest_results.xml \
"""
filterwarnings = [
    "ignore::django.utils.deprecation.RemovedInDjango60Warning",
]
DJANGO_SETTINGS_MODULE = "jobdb.settings.dev"

# vim: ft=cfg
